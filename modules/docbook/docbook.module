<?php

/**
 * @file
 * DocBooks are Books that can be exported into DocBook/XML format.
 * It is also possible to import simple DocBook documents and
 * to convert Books to DocBooks.
 */

include_once dirname(__FILE__) . '/docbook.theme.inc';
include_once dirname(__FILE__) . '/docbook.export.inc';

/**
 * Implements hook_help().
 */
function first_help($path, $arg) {
  if ($path == 'admin/help#first') {
    return t('A demonstration module.');
  }
}

/**
 * Implements hook_menu().
 */
/*
function docbook_menu() {
  $items['admin/content/docbook'] = array(
    'title' => 'DocBooks',
    'description' => "Manage your site's book outlines.",
    'page callback' => 'book_admin_overview',
    'access arguments' => array('administer book outlines'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'docbook.admin.inc',
  );
  return $items
}
*/


/**
 * Implements hook_node_view().
 */
function docbook_node_view($node, $view_mode) {
  if ($view_mode != 'rss') {
    if ($node->type == 'docbook' or $node->type == 'docbook_section') {
      docbook_node_view_link($node, $view_mode);
    }
  }
}


/**
 * Adds relevant docbook links to the node's links.
 *
 * @param $node
 *   The book page node to add links to.
 * @param $view_mode
 *   The view mode of the node.
 */
function docbook_node_view_link($node, $view_mode) {
  $links = array();

  // the link for adding a 'book' child will be replaced
  // by the link for adding a 'docbook-section' child
  unset($node->content['links']['book']['#links']['book_add_child']);

  if (isset($node->book['depth'])) {
    if ($view_mode == 'full' && node_is_page($node)) {
      $child_type = variable_get('docbook_child_type', 'docbook_section');
      if ((user_access('add content to books') || user_access('administer book outlines')) && node_access('create', $child_type) && $node->status == 1 && $node->book['depth'] < MENU_MAX_DEPTH) {
        $links['docbook_add_child'] = array(
          'title' => t('Add child page'),
          'href' => 'node/add/' . str_replace('_', '-', $child_type),
          'query' => array('parent' => $node->book['mlid']),
        );
      }

      if (user_access('access printer-friendly version')) {
        $links['docbook_printer'] = array(
          'title' => t('Export XML/DocBook version'),
          'href' => 'book/export/docbook/' . $node->nid,
          'attributes' => array('title' => t('Exports an XML/DocBook version of this book page and its sub-pages.'))
        );
      }
    }
  }

  if (!empty($links)) {
    $node->content['links']['docbook'] = array(
      '#theme' => 'links__node__docbook',
      '#links' => $links,
      '#attributes' => array('class' => array('links', 'inline')),
    );
  }
}


/**
 * Implements hook_element_info_alter().
 *
 * Sets the text format processor to a custom callback function.
 * This code is taken from: http://drupal.org/node/1003262#comment-4879140
 * See also this: http://drupal.stackexchange.com/questions/16036/set-a-default-text-format-per-content-type-in-drupal-7
 */
function docbook_element_info_alter(&$type) {
  if (isset($type['text_format']['#process'])) {
    foreach ($type['text_format']['#process'] as &$callback) {
      if ($callback === 'filter_process_format') {
        $callback = 'docbook_filter_process_format';
      }
    }
  }
}

/**
 * Callback for docbook_element_info_alter().
 */
function docbook_filter_process_format($element) {
  $element = filter_process_format($element);
  // Change the default text format of the field
  // 'dbw_content' to 'DocBookWiki'.
  if ($element['#bundle'] == 'docbook_section' && $element['#field_name'] == 'dbw_content') {
    $element['format']['format']['#options'] = array('docbookwiki' => 'DocBookWiki');
    $element['format']['format']['#default_value'] = 'docbookwiki';
  }
  return $element;
}

/**
 * Implements hook_init().
 */
function docbook_init()
{
  drupal_add_css(drupal_get_path('module', 'docbook') . '/docbook.css');
}
