<?php

/**
 * @file
 * Install, update and uninstall functions for the docbook module.
 */

// Get the functions for creating/deleting fields and instancies
// for the custom content types DocBook and DocBook_Section.
include drupal_get_path('module', 'docbook') . '/docbook.fields.inc';

/**
 * Implements hook_install().
 */
function docbook_install() {
  // Add the node types.
  _docbook_install_create_type_docbook();
  _docbook_install_create_type_docbook_section();
  _docbook_install_create_vocabulary_keywords();

  foreach (_docbook_install_fields() as $field) {
    field_create_field($field);
  }
  foreach (_docbook_install_instancies() as $instance) {
    field_create_instance($instance);
  }

  // add the 'docbookwiki' text format,
  // which contains only 'filter_dbwiki'
  _docbook_install_add_format();
}

/**
 * Implements hook_uninstall().
 */
function docbook_uninstall() {

  foreach ( array('docbook_section', 'docbook') as $type ) {
    // gather all nodes created
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => $type));
    $nids = array();
    foreach ($result as $row) {
      $nids[] = $row->nid;
    }
    // delete all the docbook_section nodes at once
    node_delete_multiple($nids);

    // remove peristant variables that control settings
    //variable_del('additional_settings__active_tab_' . $type);
    variable_del('node_preview_' . $type);
    variable_del('node_options_' . $type);
    variable_del('node_submitted_' . $type);
    variable_del('menu_options_' . $type);
    variable_del('menu_parent_' . $type);
  }

  _docbook_install_delete_fields_and_instancies();

  // delete our content type
  node_type_delete('docbook_section');
  node_type_delete('docbook');

  // purge all field information
  field_purge_batch(1000);

  // Delete menu links.
  db_delete('menu_links')
    ->condition('module', 'docbook')
    ->execute();
  menu_cache_clear_all();

  /***
  variable_del('docbook_allowed_types');
  variable_del('docbook_child_type');
  variable_del('docbook_block_mode');
  */

  // delete vocabulary 'docbook_keywords'
  _docbook_install_create_vocabulary_keywords();

  // disable the 'docbookwiki' text format
  _docbook_install_disable_format();
}

/**
 * Creates the DocBook content type.
 */
function _docbook_install_create_type_docbook() {
  // Create an DocBook node type.
  $type = 'docbook';
  $docbook = array(
    'type' => $type,
    'name' => t('DocBook'),
    'base' => 'node_content',
    'description' => t('<em>DocBooks</em> are <em>Books</em> that can be exported into <em>DocBook/XML</em> format. It is also possible to import simple DocBook documents and to convert Books to DocBooks.'),
    'help' => t("This will create a new DocBook document (of type 'book' or 'article')."),
    'module' => 'docbook',
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => TRUE,
  );

  $docbook = node_type_set_defaults($docbook);
  node_type_save($docbook);

  // Default to not promoted.
  //variable_set('additional_settings__active_tab_' . $type, 'edit-menu');
  variable_set('node_preview_' . $type, 0);
  variable_set('node_options_' . $type, array('status'));
  variable_set('node_submitted_' . $type, 0);
  variable_set('menu_options_' . $type, array());
  variable_set('menu_parent_' . $type, 'main-menu:0');

  /*
  // Use this default type for adding content to docbooks.
  variable_set('docbook_allowed_types', array('docbook'));
  variable_set('docbook_child_type', 'docbook');
  */
}

/**
 * Creates the DocBook_Section content type.
 */
function _docbook_install_create_type_docbook_section() {
  // Create a DocBook Section node type.
  $type = 'docbook_section';
  $docbook_section = array(
    'type' => $type,
    'name' => t('DocBook Section'),
    'base' => 'node_content',
    'description' => t('A section is a DocBook chunk. It can be of type Chapter, Section, Simplesect, etc. Section and Simplesect can be nested under Chapter and Section, however Simplesect can have no nested sections.'),
    'help' => t("This will create a new DocBook Section ('chapter', 'section', 'simplesect', etc.)"),
    'module' => 'docbook',
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => TRUE,
  );

  $docbook_section = node_type_set_defaults($docbook_section);
  node_type_save($docbook_section);

  // Default to not promoted.
  //variable_set('additional_settings__active_tab_' . $type, 'edit-menu');
  variable_set('node_preview_' . $type, 0);
  variable_set('node_options_' . $type, array('status'));
  variable_set('node_submitted_' . $type, 0);
  variable_set('menu_options_' . $type, array());
  variable_set('menu_parent_' . $type, 'main-menu:0');
}

/**
 * Create a vocabulary for the docbook keywords.
 * See:
 * http://steindom.com/articles/creating-vocabularies-and-taxonomy-terms-programmatically-drupal-7
 */
function _docbook_install_create_vocabulary_keywords() {
  $vocabulary = 'docbook_keywords';
  if (taxonomy_vocabulary_machine_name_load($vocabulary))  return;
  taxonomy_vocabulary_save((object) array(
      'name' => 'DocBook Keywords',
      'machine_name' => 'docbook_keywords',
      'hierarchy' =>  0,
    ));
}

function _docbook_install_delete_vocabulary_keywords() {
  $vocabulary = 'docbook_keywords';
  $vobj = taxonomy_vocabulary_machine_name_load($vocabulary);
  taxonomy_vocabulary_delete($vobj->vid);
}

/**
 * Text formats are usually defined from the admin GUI
 * (admin/config/content/formats/add). But we can also
 * add them programatically/automatically on installation.
 *
 * See: http://stackoverflow.com/questions/13330561/drupal-module-create-a-text-format?rq=1
 *
 * In our case, the filter 'filter_dbwiki' is defined by
 * the module 'dbwiki', so this module depends on it.
 */
function _docbook_install_add_format() {

  drupal_load('module', 'filter');

  // define the attributes of the text format
  $format = array(
    'format' => 'docbookwiki',
    'name' => 'DocBookWiki',
    'filters' => array(
      'filter_dbwiki' => array(
        'weight' => 0,
        'status' => TRUE,
      ),
    ),
  );
  $format = (object) $format;
  filter_format_save($format);

  // allow an authenticated user to use this text format
  $role = user_role_load_by_name('authenticated user');
  user_role_change_permissions($role->rid, array('use text format docbookwiki' => TRUE));
}

/**
 * Disable the 'docbookwiki' text format.
 */
function _docbook_install_disable_format() {
  drupal_load('module', 'filter');

  // check wheather it already exists
  if (filter_format_exists('docbookwiki'))  return;

  // disable the format
  filter_format_disable('docbookwiki');
}